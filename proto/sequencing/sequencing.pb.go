// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: sequencing.proto

package sequencing

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SubmitRollupTransactionRequest ...
type SubmitRollupTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the unhashed rollup id
	RollupId []byte `protobuf:"bytes,1,opt,name=rollup_id,json=rollupId,proto3" json:"rollup_id,omitempty"`
	// the raw data bytes of the rollup transaction
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SubmitRollupTransactionRequest) Reset() {
	*x = SubmitRollupTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequencing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitRollupTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitRollupTransactionRequest) ProtoMessage() {}

func (x *SubmitRollupTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sequencing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitRollupTransactionRequest.ProtoReflect.Descriptor instead.
func (*SubmitRollupTransactionRequest) Descriptor() ([]byte, []int) {
	return file_sequencing_proto_rawDescGZIP(), []int{0}
}

func (x *SubmitRollupTransactionRequest) GetRollupId() []byte {
	if x != nil {
		return x.RollupId
	}
	return nil
}

func (x *SubmitRollupTransactionRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// SubmitRollupTransactionResponse ...
type SubmitRollupTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitRollupTransactionResponse) Reset() {
	*x = SubmitRollupTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequencing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitRollupTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitRollupTransactionResponse) ProtoMessage() {}

func (x *SubmitRollupTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sequencing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitRollupTransactionResponse.ProtoReflect.Descriptor instead.
func (*SubmitRollupTransactionResponse) Descriptor() ([]byte, []int) {
	return file_sequencing_proto_rawDescGZIP(), []int{1}
}

// Batch holds a list of transactions
type Batch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions [][]byte `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *Batch) Reset() {
	*x = Batch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequencing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Batch) ProtoMessage() {}

func (x *Batch) ProtoReflect() protoreflect.Message {
	mi := &file_sequencing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Batch.ProtoReflect.Descriptor instead.
func (*Batch) Descriptor() ([]byte, []int) {
	return file_sequencing_proto_rawDescGZIP(), []int{2}
}

func (x *Batch) GetTransactions() [][]byte {
	if x != nil {
		return x.Transactions
	}
	return nil
}

// VerificationResponse
type VerificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *VerificationResponse) Reset() {
	*x = VerificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequencing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationResponse) ProtoMessage() {}

func (x *VerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sequencing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationResponse.ProtoReflect.Descriptor instead.
func (*VerificationResponse) Descriptor() ([]byte, []int) {
	return file_sequencing_proto_rawDescGZIP(), []int{3}
}

func (x *VerificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_sequencing_proto protoreflect.FileDescriptor

var file_sequencing_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x22, 0x51,
	0x0a, 0x1e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x75,
	0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x30, 0x0a, 0x14, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x32, 0x86, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x74, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x49, 0x0a, 0x0f,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x36, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x11, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x22, 0x00, 0x32, 0x55, 0x0a, 0x0d, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x38,
	0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x6e, 0x6f,
	0x6d, 0x61, 0x6c, 0x79, 0x46, 0x69, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sequencing_proto_rawDescOnce sync.Once
	file_sequencing_proto_rawDescData = file_sequencing_proto_rawDesc
)

func file_sequencing_proto_rawDescGZIP() []byte {
	file_sequencing_proto_rawDescOnce.Do(func() {
		file_sequencing_proto_rawDescData = protoimpl.X.CompressGZIP(file_sequencing_proto_rawDescData)
	})
	return file_sequencing_proto_rawDescData
}

var file_sequencing_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sequencing_proto_goTypes = []any{
	(*SubmitRollupTransactionRequest)(nil),  // 0: sequencing.SubmitRollupTransactionRequest
	(*SubmitRollupTransactionResponse)(nil), // 1: sequencing.SubmitRollupTransactionResponse
	(*Batch)(nil),                           // 2: sequencing.Batch
	(*VerificationResponse)(nil),            // 3: sequencing.VerificationResponse
}
var file_sequencing_proto_depIdxs = []int32{
	0, // 0: sequencing.SequencerInput.SubmitRollupTransaction:input_type -> sequencing.SubmitRollupTransactionRequest
	2, // 1: sequencing.SequencerOutput.GetNextBatch:input_type -> sequencing.Batch
	2, // 2: sequencing.BatchVerifier.VerifyBatch:input_type -> sequencing.Batch
	1, // 3: sequencing.SequencerInput.SubmitRollupTransaction:output_type -> sequencing.SubmitRollupTransactionResponse
	2, // 4: sequencing.SequencerOutput.GetNextBatch:output_type -> sequencing.Batch
	3, // 5: sequencing.BatchVerifier.VerifyBatch:output_type -> sequencing.VerificationResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sequencing_proto_init() }
func file_sequencing_proto_init() {
	if File_sequencing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sequencing_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitRollupTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequencing_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitRollupTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequencing_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Batch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequencing_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*VerificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sequencing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_sequencing_proto_goTypes,
		DependencyIndexes: file_sequencing_proto_depIdxs,
		MessageInfos:      file_sequencing_proto_msgTypes,
	}.Build()
	File_sequencing_proto = out.File
	file_sequencing_proto_rawDesc = nil
	file_sequencing_proto_goTypes = nil
	file_sequencing_proto_depIdxs = nil
}
